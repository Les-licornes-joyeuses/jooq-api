/*
 * This file is generated by jOOQ.
 */
package io.company.team.tables.imm_professeur;


import io.company.team.tables.DefaultCatalog;
import io.company.team.tables.imm_professeur.tables.Listeetudiantscours;
import io.company.team.tables.imm_professeur.tables.records.ListeetudiantscoursRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImmProfesseur extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>imm_professeur</code>
     */
    public static final ImmProfesseur IMM_PROFESSEUR = new ImmProfesseur();

    /**
     * The table <code>imm_professeur.listeetudiantscours</code>.
     */
    public final Listeetudiantscours LISTEETUDIANTSCOURS = Listeetudiantscours.LISTEETUDIANTSCOURS;

    /**
     * Call <code>imm_professeur.listeetudiantscours</code>.
     */
    public static Result<ListeetudiantscoursRecord> LISTEETUDIANTSCOURS(
          Configuration configuration
        , String siglecours
        , String matriculeprofesseur
    ) {
        return configuration.dsl().selectFrom(io.company.team.tables.imm_professeur.tables.Listeetudiantscours.LISTEETUDIANTSCOURS.call(
              siglecours
            , matriculeprofesseur
        )).fetch();
    }

    /**
     * Get <code>imm_professeur.listeetudiantscours</code> as a table.
     */
    public static Listeetudiantscours LISTEETUDIANTSCOURS(
          String siglecours
        , String matriculeprofesseur
    ) {
        return io.company.team.tables.imm_professeur.tables.Listeetudiantscours.LISTEETUDIANTSCOURS.call(
            siglecours,
            matriculeprofesseur
        );
    }

    /**
     * Get <code>imm_professeur.listeetudiantscours</code> as a table.
     */
    public static Listeetudiantscours LISTEETUDIANTSCOURS(
          Field<String> siglecours
        , Field<String> matriculeprofesseur
    ) {
        return io.company.team.tables.imm_professeur.tables.Listeetudiantscours.LISTEETUDIANTSCOURS.call(
            siglecours,
            matriculeprofesseur
        );
    }

    /**
     * No further instances allowed
     */
    private ImmProfesseur() {
        super("imm_professeur", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Listeetudiantscours.LISTEETUDIANTSCOURS
        );
    }
}
