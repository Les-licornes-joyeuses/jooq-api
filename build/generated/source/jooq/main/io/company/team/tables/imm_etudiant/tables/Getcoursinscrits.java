/*
 * This file is generated by jOOQ.
 */
package io.company.team.tables.imm_etudiant.tables;


import io.company.team.tables.imm_etudiant.ImmEtudiant;
import io.company.team.tables.imm_etudiant.tables.records.GetcoursinscritsRecord;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Getcoursinscrits extends TableImpl<GetcoursinscritsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>imm_etudiant.getcoursinscrits</code>
     */
    public static final Getcoursinscrits GETCOURSINSCRITS = new Getcoursinscrits();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetcoursinscritsRecord> getRecordType() {
        return GetcoursinscritsRecord.class;
    }

    /**
     * The column <code>imm_etudiant.getcoursinscrits.titre</code>.
     */
    public final TableField<GetcoursinscritsRecord, String> TITRE = createField(DSL.name("titre"), io.company.team.tables.mdd.Domains.TITRE.getDataType(), this, "");

    /**
     * The column <code>imm_etudiant.getcoursinscrits.sigle</code>.
     */
    public final TableField<GetcoursinscritsRecord, String> SIGLE = createField(DSL.name("sigle"), io.company.team.tables.mdd.Domains.SIGLE.getDataType(), this, "");

    /**
     * The column <code>imm_etudiant.getcoursinscrits.matriculep</code>.
     */
    public final TableField<GetcoursinscritsRecord, String> MATRICULEP = createField(DSL.name("matriculep"), io.company.team.tables.mdd.Domains.MATRICULEP.getDataType(), this, "");

    /**
     * The column <code>imm_etudiant.getcoursinscrits.nom</code>.
     */
    public final TableField<GetcoursinscritsRecord, String> NOM = createField(DSL.name("nom"), io.company.team.tables.mdd.Domains.NOM.getDataType(), this, "");

    private Getcoursinscrits(Name alias, Table<GetcoursinscritsRecord> aliased) {
        this(alias, aliased, new Field[] {
            DSL.val(null, io.company.team.tables.mdd.Domains.MATRICULEE.getDataType())
        });
    }

    private Getcoursinscrits(Name alias, Table<GetcoursinscritsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.function());
    }

    /**
     * Create an aliased <code>imm_etudiant.getcoursinscrits</code> table
     * reference
     */
    public Getcoursinscrits(String alias) {
        this(DSL.name(alias), GETCOURSINSCRITS);
    }

    /**
     * Create an aliased <code>imm_etudiant.getcoursinscrits</code> table
     * reference
     */
    public Getcoursinscrits(Name alias) {
        this(alias, GETCOURSINSCRITS);
    }

    /**
     * Create a <code>imm_etudiant.getcoursinscrits</code> table reference
     */
    public Getcoursinscrits() {
        this(DSL.name("getcoursinscrits"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : ImmEtudiant.IMM_ETUDIANT;
    }

    @Override
    public Getcoursinscrits as(String alias) {
        return new Getcoursinscrits(DSL.name(alias), this, parameters);
    }

    @Override
    public Getcoursinscrits as(Name alias) {
        return new Getcoursinscrits(alias, this, parameters);
    }

    @Override
    public Getcoursinscrits as(Table<?> alias) {
        return new Getcoursinscrits(alias.getQualifiedName(), this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getcoursinscrits rename(String name) {
        return new Getcoursinscrits(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getcoursinscrits rename(Name name) {
        return new Getcoursinscrits(name, null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public Getcoursinscrits rename(Table<?> name) {
        return new Getcoursinscrits(name.getQualifiedName(), null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public Getcoursinscrits call(
          String _Matriculee
    ) {
        Getcoursinscrits result = new Getcoursinscrits(DSL.name("getcoursinscrits"), null, new Field[] {
            DSL.val(_Matriculee, io.company.team.tables.mdd.Domains.MATRICULEE.getDataType())
        });

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }

    /**
     * Call this table-valued function
     */
    public Getcoursinscrits call(
          Field<String> _Matriculee
    ) {
        Getcoursinscrits result = new Getcoursinscrits(DSL.name("getcoursinscrits"), null, new Field[] {
            _Matriculee
        });

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }
}
