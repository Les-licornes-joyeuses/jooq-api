/*
 * This file is generated by jOOQ.
 */
package io.company.team.tables.imm_base;


import io.company.team.tables.DefaultCatalog;
import io.company.team.tables.imm_base.tables.Getallprof;
import io.company.team.tables.imm_base.tables.Getallstudents;
import io.company.team.tables.imm_base.tables.OffrePlanNonCouverte;
import io.company.team.tables.imm_base.tables.records.GetallprofRecord;
import io.company.team.tables.imm_base.tables.records.GetallstudentsRecord;
import io.company.team.tables.imm_base.tables.records.OffrePlanNonCouverteRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Configuration;
import org.jooq.Result;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImmBase extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>IMM_base</code>
     */
    public static final ImmBase IMM_BASE = new ImmBase();

    /**
     * The table <code>IMM_base.getallprof</code>.
     */
    public final Getallprof GETALLPROF = Getallprof.GETALLPROF;

    /**
     * Call <code>IMM_base.getallprof</code>.
     */
    public static Result<GetallprofRecord> GETALLPROF(
          Configuration configuration
    ) {
        return configuration.dsl().selectFrom(io.company.team.tables.imm_base.tables.Getallprof.GETALLPROF.call(
        )).fetch();
    }

    /**
     * Get <code>IMM_base.getallprof</code> as a table.
     */
    public static Getallprof GETALLPROF() {
        return io.company.team.tables.imm_base.tables.Getallprof.GETALLPROF.call(
        );
    }

    /**
     * The table <code>IMM_base.getallstudents</code>.
     */
    public final Getallstudents GETALLSTUDENTS = Getallstudents.GETALLSTUDENTS;

    /**
     * Call <code>IMM_base.getallstudents</code>.
     */
    public static Result<GetallstudentsRecord> GETALLSTUDENTS(
          Configuration configuration
    ) {
        return configuration.dsl().selectFrom(io.company.team.tables.imm_base.tables.Getallstudents.GETALLSTUDENTS.call(
        )).fetch();
    }

    /**
     * Get <code>IMM_base.getallstudents</code> as a table.
     */
    public static Getallstudents GETALLSTUDENTS() {
        return io.company.team.tables.imm_base.tables.Getallstudents.GETALLSTUDENTS.call(
        );
    }

    /**
     * The table <code>IMM_base.offre_plan_non_couverte</code>.
     */
    public final OffrePlanNonCouverte OFFRE_PLAN_NON_COUVERTE = OffrePlanNonCouverte.OFFRE_PLAN_NON_COUVERTE;

    /**
     * Call <code>IMM_base.offre_plan_non_couverte</code>.
     */
    public static Result<OffrePlanNonCouverteRecord> OFFRE_PLAN_NON_COUVERTE(
          Configuration configuration
    ) {
        return configuration.dsl().selectFrom(io.company.team.tables.imm_base.tables.OffrePlanNonCouverte.OFFRE_PLAN_NON_COUVERTE.call(
        )).fetch();
    }

    /**
     * Get <code>IMM_base.offre_plan_non_couverte</code> as a table.
     */
    public static OffrePlanNonCouverte OFFRE_PLAN_NON_COUVERTE() {
        return io.company.team.tables.imm_base.tables.OffrePlanNonCouverte.OFFRE_PLAN_NON_COUVERTE.call(
        );
    }

    /**
     * No further instances allowed
     */
    private ImmBase() {
        super("IMM_base", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Getallprof.GETALLPROF,
            Getallstudents.GETALLSTUDENTS,
            OffrePlanNonCouverte.OFFRE_PLAN_NON_COUVERTE
        );
    }
}
